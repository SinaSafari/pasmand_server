version: "3"

services:
  nginx:
    image: nginx:1.21.0-alpine
    container_name: nginx_webserver
    tty: true
    depends_on:
      - server
    ports:
      - "8080:8080"
#      - 443:443
    volumes:
      - ./lib/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - appNetwork

  postgres:
    image: postgres:13.2-alpine
    container_name: postgresdb
    environment:
      POSTGRES_USER: "db_user"
      POSTGRES_PASSWORD: "db_password"
      POSTGRES_DB: "pasmand_db"
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - appNetwork

  pgadmin:
    image: dpage/pgadmin4:6.9
    container_name: pgadmin
    depends_on:
      - postgres
    volumes:
      - pg-admin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "m.sinasafari@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin_password"
      PGADMIN_LISTEN_PORT: 7000
    networks:
      - appNetwork
    links:
      - "postgres:pgsql-server"

  redis:
    image: redis:6.2.4-alpine
    container_name: redis
    command: redis-server --port 6379
    tty: true
    networks:
      - appNetwork

  server:
    build:
      context: .
    container_name: server
    restart: always
    depends_on:
      - postgres
      - redis
#    volumes:
#      - .:/app
    networks:
      - appNetwork

  otp:
    build:
      context: ./consumer
    container_name: otp_server
    restart: always
    depends_on:
      - zookeeper
      - kafka
      - server
    networks:
      - appNetwork

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - appNetwork
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.0.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - appNetwork


networks:
  appNetwork:
    driver: bridge

volumes:
  pg-data:
  pg-admin-data: